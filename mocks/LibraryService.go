// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import tldr "github.com/eirikbell/slap/tldr"

// LibraryService is an autogenerated mock type for the LibraryService type
type LibraryService struct {
	mock.Mock
}

// CollectPayment provides a mock function with given fields: _a0, _a1
func (_m *LibraryService) CollectPayment(_a0 int, _a1 int) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, int) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetBook provides a mock function with given fields: _a0
func (_m *LibraryService) GetBook(_a0 string) *tldr.Book {
	ret := _m.Called(_a0)

	var r0 *tldr.Book
	if rf, ok := ret.Get(0).(func(string) *tldr.Book); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*tldr.Book)
		}
	}

	return r0
}

// GetCustomer provides a mock function with given fields: _a0
func (_m *LibraryService) GetCustomer(_a0 int) (*tldr.Customer, error) {
	ret := _m.Called(_a0)

	var r0 *tldr.Customer
	if rf, ok := ret.Get(0).(func(int) *tldr.Customer); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*tldr.Customer)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLendsForCustomer provides a mock function with given fields: _a0
func (_m *LibraryService) GetLendsForCustomer(_a0 int) ([]*tldr.Book, error) {
	ret := _m.Called(_a0)

	var r0 []*tldr.Book
	if rf, ok := ret.Get(0).(func(int) []*tldr.Book); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*tldr.Book)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOldDbBooks provides a mock function with given fields:
func (_m *LibraryService) GetOldDbBooks() []*tldr.Book {
	ret := _m.Called()

	var r0 []*tldr.Book
	if rf, ok := ret.Get(0).(func() []*tldr.Book); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*tldr.Book)
		}
	}

	return r0
}

// SaveBook provides a mock function with given fields: _a0
func (_m *LibraryService) SaveBook(_a0 *tldr.Book) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*tldr.Book) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
